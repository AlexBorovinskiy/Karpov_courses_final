Залача 1
import pandas as pd

import numpy as np 

from itertools import combinations

import matplotlib.pyplot as plt
import seaborn as sns

import statsmodels.api as sm
import statsmodels.formula.api as smf

from fbprophet import Prophet
import pandahouse as ph

products = pd.read_csv('https://stepik.org/media/attachments/lesson/409319/test1_completed.csv')

products = products.rename(columns={"Товар": "product", "Количество": "quantity"})

list_products = products['product'].to_list() # создаём список со всеми покупками

set_products = set(list_products) # создём tuple, чтобы избавиться от повторений

cleared_list_products = list(set_products) # возвращаем формат списка 

list_combinations = list(combinations(cleared_list_products, 2)) # находим все возможные комбинации

agg_products = products.groupby('id')['product'].agg(list).to_frame().reset_index() 
# создаем аггрегированную таблицу, где покупки идут списками

list_checks = list(agg_products['product']) # создаём список списков со всеми чеками

list_lists_combinations = []
for comb in list_combinations:
    list_lists_combinations.append(list(comb))
# возвращаем формат списка списков

for comb in list_lists_combinations:
    comb.append(0)
# к каждой комбинации добавляем счётчик

for check in list_checks:  
    for comb in list_lists_combinations:
        if comb[0] in check and comb[1] in check:
            comb[2] += 1


first_five = sorted(list_lists_combinations, key=lambda i: i[2], reverse=True)[0:5] # сортируем по убыванию и выбираем первые 5

answer_1 = pd.DataFrame(first_five, columns = ['1_Товар','2_Товар','Встречаемость'], index=[1,2,3,4,5]) 
# переводим в табличный формат и делаем индекс более business friendly

answer_1
